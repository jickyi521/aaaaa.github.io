<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | A blog of EasonWoW]]></title>
  <link href="http://jickyi521.github.io/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://jickyi521.github.io/"/>
  <updated>2015-01-23T11:48:42+08:00</updated>
  <id>http://jickyi521.github.io/</id>
  <author>
    <name><![CDATA[EasonWoW]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LayoutSubViews_Not_Called_iOS_8.0.2]]></title>
    <link href="http://jickyi521.github.io/blog/2015/01/23/layoutsubviews-not-called-ios-8-dot-0-2/"/>
    <updated>2015-01-23T11:00:49+08:00</updated>
    <id>http://jickyi521.github.io/blog/2015/01/23/layoutsubviews-not-called-ios-8-dot-0-2</id>
    <content type="html"><![CDATA[<p>最近在做一个非常简单的需求，就是在一个lable里面显示百分比。
实现的方式是在lable里面加了两个layers，这样后续如果要加动画也可方便扩展。</p>

<p><img src="/images/0123_01.png"></p>

<p>实现代码:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">updateViewWithLeftColor:</span><span class="p">(</span><span class="n">UIColor</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">leftColor</span> <span class="nl">andRightColor:</span><span class="p">(</span><span class="n">UIColor</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">rightColor</span> <span class="nl">andProgress:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="n">progress</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">if</span><span class="p">(</span><span class="o">!&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">leftView</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="o">!&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">rightView</span><span class="p">){</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">leftView</span> <span class="o">=</span> <span class="p">[</span><span class="n">CALayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>      <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">rightView</span> <span class="o">=</span> <span class="p">[</span><span class="n">CALayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>      <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer:</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">leftView</span><span class="p">];</span>
</span><span class='line'>      <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer:</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">rightView</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">leftView</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">leftColor</span><span class="p">.</span><span class="n">CGColor</span><span class="p">;</span>
</span><span class='line'>  <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">rightView</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">rightColor</span><span class="p">.</span><span class="n">CGColor</span><span class="p">;</span>
</span><span class='line'>  <span class="n">_leftPercent</span> <span class="o">=</span> <span class="n">progress</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="p">[</span><span class="n">self</span> <span class="n">setNeedsLayout</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;&amp;</span><span class="n">ndash</span><span class="p">;(</span><span class="kt">void</span><span class="p">)</span><span class="n">layoutSubviews</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[</span><span class="n">super</span> <span class="n">layoutSubviews</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">width</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">height</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">leftWidth</span> <span class="o">=</span> <span class="n">fabs</span><span class="p">(</span><span class="n">width</span> <span class="o">*</span> <span class="n">_leftPercent</span><span class="o">/</span><span class="mi">100</span><span class="p">);</span>
</span><span class='line'><span class="n">_leftView</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">leftWidth</span><span class="p">,</span> <span class="n">height</span><span class="p">);</span>
</span><span class='line'><span class="n">_rightView</span> <span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="n">leftWidth</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">fabs</span><span class="p">(</span><span class="n">width</span> <span class="o">-</span> <span class="n">leftWidth</span><span class="p">),</span> <span class="n">height</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>测试发现在8.0.2上面，显示条没有正确绘制。调试发现在此版本
[self setNeedsLayout] 之后并没有调用 layoutSubviews去绘制进度。在7.1和8.1是没有问题，stackoverflow上面找到可能是苹果 8.0 &ndash; 8.1间版本的bug。</p>

<p><img src="/images/0123_02.png"></p>

<p>原因是大概清楚了，解决起来也很简单，直接不用layoutSubviews.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">updateViewWithLeftColor:</span><span class="p">(</span><span class="n">UIColor</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">leftColor</span> <span class="nl">andRightColor:</span><span class="p">(</span><span class="n">UIColor</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">rightColor</span> <span class="nl">andProgress:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="n">progress</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">_leftView</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="o">!</span><span class="n">_rightView</span><span class="p">){</span>
</span><span class='line'>    <span class="n">_leftView</span> <span class="o">=</span> <span class="p">[</span><span class="n">CALayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>    <span class="n">_rightView</span> <span class="o">=</span> <span class="p">[</span><span class="n">CALayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer:</span><span class="n">_leftView</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer:</span><span class="n">_rightView</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">_leftView</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">leftColor</span><span class="p">.</span><span class="n">CGColor</span><span class="p">;</span>
</span><span class='line'><span class="n">_rightView</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">rightColor</span><span class="p">.</span><span class="n">CGColor</span><span class="p">;</span>
</span><span class='line'><span class="n">_leftPercent</span> <span class="o">=</span> <span class="n">progress</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">width</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">height</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">leftWidth</span> <span class="o">=</span> <span class="n">fabs</span><span class="p">(</span><span class="n">width</span> <span class="o">*</span> <span class="n">_leftPercent</span><span class="o">/</span><span class="mi">100</span><span class="p">);</span>
</span><span class='line'><span class="n">_leftView</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">leftWidth</span><span class="p">,</span> <span class="n">height</span><span class="p">);</span>
</span><span class='line'><span class="n">_rightView</span> <span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="n">leftWidth</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">fabs</span><span class="p">(</span><span class="n">width</span> <span class="o">-</span> <span class="n">leftWidth</span><span class="p">),</span> <span class="n">height</span><span class="p">);</span>
</span><span class='line'><span class="c1">//[self setNeedsLayout] 8.0.2  不会调 layoutSubviews TODO</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>那么问题来了，什么时候用 layoutSubviews???</p>

<p>TODO</p>

<!--more-->


<p><a href="http://stackoverflow.com/questions/24510596/xcode6-ios8-and-voidlayoutsubviews">http://stackoverflow.com/questions/24510596/xcode6-ios8-and-voidlayoutsubviews</a>
<a href="http://www.cocoachina.com/industry/20110731/3071.html">http://www.cocoachina.com/industry/20110731/3071.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Several Concepts About Px Pt Dp... 关于屏幕适配的几个单位的概念]]></title>
    <link href="http://jickyi521.github.io/blog/2015/01/20/several-concept-about-px-pt-dot-dot-dot/"/>
    <updated>2015-01-20T14:30:22+08:00</updated>
    <id>http://jickyi521.github.io/blog/2015/01/20/several-concept-about-px-pt-dot-dot-dot</id>
    <content type="html"><![CDATA[<p><img src="/images/0120_01.png"></p>

<p>最近在做 适配 的问题，当看到上面这张图后，顿时对这几个概念还有之前Android的dp、sp有些失措。</p>

<p>于是先理了下目前所有iPhone设备的参数情况:</p>

<table>
<thead>
<tr>
<th align="center">   Unit  </th>
<th align="center">  iPhone 3G/S  </th>
<th align="center"> iPhone 4/4S  </th>
<th align="center"> iPhone 5/5S/5C  </th>
<th align="center">     iPhone 6  </th>
<th align="center">   iPhone 6+  </th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">  Screen Size  </td>
<td align="center">      3.5'     </td>
<td align="center">       4'     </td>
<td align="center">        4.7'     </td>
<td align="center">       4.7'    </td>
<td align="center">       5.5'   </td>
</tr>
<tr>
<td align="center">  Physic Pixel </td>
<td align="center">    320*480    </td>
<td align="center">    640*960   </td>
<td align="center">     640*1136    </td>
<td align="center">     750*1334  </td>
<td align="center">    1080*1920 </td>
</tr>
<tr>
<td align="center">  Logic Pixel  </td>
<td align="center">    320*480    </td>
<td align="center">    320*480   </td>
<td align="center">      320*568    </td>
<td align="center">     375*667   </td>
<td align="center">     414*736  </td>
</tr>
<tr>
<td align="center">  Scale        </td>
<td align="center">      @1x      </td>
<td align="center">      @2x     </td>
<td align="center">        @2x      </td>
<td align="center">       @2x     </td>
<td align="center">       @3x    </td>
</tr>
<tr>
<td align="center">  PPI          </td>
<td align="center">      163      </td>
<td align="center">      326     </td>
<td align="center">        326      </td>
<td align="center">       326     </td>
<td align="center">       401    </td>
</tr>
<tr>
<td align="center">  DPI          </td>
<td align="center">      163      </td>
<td align="center">      163     </td>
<td align="center">        163      </td>
<td align="center">       163     </td>
<td align="center">       154    </td>
</tr>
</tbody>
</table>


<!--more-->


<h3><em>尺寸</em></h3>

<blockquote><p>对角线的物理英寸数，1 inch = 2.54 cm</p></blockquote>

<h3><em>像素分辨率</em></h3>

<blockquote><p>一屏下一共最多可以显示了多少像素</p></blockquote>

<h3><em>逻辑分辨率/像素/PT</em></h3>

<blockquote><p>一屏下一共最多可以显示了逻辑像素/PT</p></blockquote>

<h3><em>倍率</em></h3>

<blockquote><p>像素分辨率/逻辑分辨率， 这个决定UX的切图</p></blockquote>

<h3><em>PPI/屏幕密度</em></h3>

<blockquote><p>Pixels per inch, 每英寸的像素数量, 高质量的屏幕显示像素精细优雅，看起来比较小，低ppi的相对粗糙，看起来大</p></blockquote>

<h3><em>DPI/屏幕点数</em></h3>

<blockquote><p>Dots per inch. 这是逻辑概念的点数，乘倍率就为像素 dpi</p></blockquote>

<p>另外iPhone 6屏幕实际可显示分辨率 1242 x 2208缩放到1080x1920优化显示。</p>

<p><a href="http://weizhifeng.net/you-should-know-about-dpi.html">http://weizhifeng.net/you-should-know-about-dpi.html</a>
<a href="http://www.zhihu.com/question/25361043">http://www.zhihu.com/question/25361043</a>
<a href="http://blakespot.com/ios_device_specifications_grid.html">http://blakespot.com/ios_device_specifications_grid.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A New Way to Instead of Mask - Tap获得点击区域来判断]]></title>
    <link href="http://jickyi521.github.io/blog/2015/01/16/a-new-way-about-mask/"/>
    <updated>2015-01-16T10:37:56+08:00</updated>
    <id>http://jickyi521.github.io/blog/2015/01/16/a-new-way-about-mask</id>
    <content type="html"><![CDATA[<p>之前在做UI的事件处理时，往往会有些新(蛋)颖(疼)的需求，比如要点击某块区域才能触发事件。
这时候首先想到的方法是在这块区域上面加块蒙版(UIButton)，把背景设为透明，自认为是so easy得解决了。</p>

<p>这俩天看到一种利用点击事件比较坐标讨巧的方式。有俩种方式:</p>

<ul>
<li>1、往View上加点击事件</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span> <span class="n">self</span><span class="p">.</span><span class="n">tapGestureRecognizer</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UITapGestureRecognizer</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTarget:</span><span class="n">self</span> <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">touchView:</span><span class="p">)];</span>
</span><span class='line'> <span class="p">[</span><span class="n">self</span> <span class="nl">addGestureRecognizer:</span><span class="n">self</span><span class="p">.</span><span class="n">tapGestureRecognizer</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">touchView:</span><span class="p">(</span><span class="n">UITapGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="n">tap</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">CGPoint</span> <span class="n">touchPoint</span> <span class="o">=</span> <span class="p">[</span><span class="n">tap</span> <span class="nl">locationInView:</span><span class="n">self</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="c1">//拿到点击区域的坐标后进行比较 处理相应业务逻辑&lt;/p&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;&amp;</span><span class="n">ndash</span><span class="p">;(</span><span class="kt">void</span><span class="p">)</span><span class="n">dealloc</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[</span><span class="n">self</span> <span class="nl">removeGestureRecognizer:</span><span class="n">self</span><span class="p">.]</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>2、 直接重写view 的touchesEnded:withEvent 方法, 拿到事件的target view获得坐标</li>
</ul>


<!--more-->


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;&amp;</span><span class="n">ndash</span><span class="p">;(</span><span class="kt">void</span><span class="p">)</span><span class="nl">touchesEnded:</span><span class="p">(</span><span class="n">NSSet</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">touches</span> <span class="nl">withEvent:</span><span class="p">(</span><span class="n">UIEvent</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">event</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[</span><span class="n">super</span> <span class="nl">touchesEnded:</span><span class="n">touches</span> <span class="nl">withEvent:</span><span class="n">event</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">UITouch</span> <span class="o">*</span><span class="n">touch</span> <span class="o">=</span> <span class="p">[</span><span class="n">touches</span> <span class="n">anyObject</span><span class="p">];</span>
</span><span class='line'><span class="n">CGPoint</span> <span class="n">touchLocation</span> <span class="o">=</span> <span class="p">[</span><span class="n">touch</span> <span class="nl">locationInView:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//点击区域在titleLable的上方</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">touchLocation</span><span class="p">.</span><span class="n">y</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">self</span><span class="p">.</span><span class="n">titleLable</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">y</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="n">goToGrouponSummary</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">dealloc</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="nl">removeGestureRecognizer:</span><span class="n">self</span><span class="p">.</span><span class="n">tapGestureRecognizer</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>第二种方式相对更简洁直接，一对比蒙版的方式low得要掉牙袅。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AutomaticallyAdjustsScrollViewInsets 和 Translucent 属性]]></title>
    <link href="http://jickyi521.github.io/blog/2014/07/02/use-automaticallyadjustsscrollviewinsets/"/>
    <updated>2014-07-02T22:18:15+08:00</updated>
    <id>http://jickyi521.github.io/blog/2014/07/02/use-automaticallyadjustsscrollviewinsets</id>
    <content type="html"><![CDATA[<p>最近在调UITabBarVC 里navigationbar吃掉contentview bug，最后主要定位到 automaticallyAdjustsScrollViewInsets 和 translucent属性使用不正确</p>

<p>iOS 7.0 statusbar 20points 和 navigationbar 44points在默认的情况下是透明的也就是VC的
self.view （0，0）是从 最左上角开始。</p>

<p><img src="/images/0702-01.png"></p>

<p>在默认情况下普通的UIView和UIScrollView添加 红色的view (0,0,64,64) 展现的形式是不一样的</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;(</span><span class="kt">void</span><span class="p">)</span><span class="n">addRedUIView</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">UIView</span> <span class="o">*</span><span class="n">redView</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">64</span><span class="p">)];</span>
</span><span class='line'><span class="n">redView</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">redColor</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">redView</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>UIVIew</li>
</ul>


<p><img src="/images/0702-02.png"></p>

<ul>
<li>UITableView</li>
</ul>


<p><img src="/images/0702-03.png"></p>

<p>这种情形由 automaticallyAdjustsScrollViewInsets 和 translucent属性所决定</p>

<h2>automaticallyAdjustsScrollViewInsets</h2>

<p><code>Specifies whether or not the view controller should automatically adjust its scroll view insets.
Default value is YES, which allows the view controller to adjust its scroll view insets in response to the screen areas consumed by the status bar, navigation bar, and toolbar or tab bar. Set to NO if you want to manage scroll view inset adjustments yourself, such as when there is more than one scroll view in the view hierarchy.</code></p>

<p>这个参数是7.0 出来，主要是为带有 UIScrollView 的控件所服务，且属性默认是YES, 也就是说</p>

<!--more-->


<p>在透明bar情形下，都会给加上个 64points 的insets， insets就是一个padding概念。
[self.tableView setContentInset:UIEdgeInsetsMake(64, 0, 0, 0)];</p>

<ul>
<li>1、navigationbar 透明</li>
</ul>


<p><img src="/images/07-03-01.png"></p>

<p>即 self.navigationController.navigationBar.translucent = YES; 往navigation里面加的view都会往navigationbar里面进去，
对于scrollview的控件可以加个 UIEdgeInsetsMake(64, 0, 0, 0) 的insets，</p>

<p>而对于普通的uiview这种情况推荐最上层套个UIScrollView去处理，也可以将view在IB里面往下移动64去显示，注意点对对齐位置方式。不建议用代码去控制，太繁琐，尤其在考虑多屏幕下横竖屏情况，用autolayout是最合适的方式，还不熟悉呢这块。</p>

<ul>
<li>2、navigationbar 不透明</li>
</ul>


<p>view自动在navigationbar下面显示，不需要处理。</p>

<p> <a href="http://www.doubleencore.com/2013/12/reconciling-ios-6-ios-7-using-interface-builder/">iOS 6 &ndash; 7 的status bar兼容</a>   <br>
 <a href="http://www.doubleencore.com/2013/09/developers-guide-to-the-ios-7-status-bar/">Developer’s Guide to the iOS 7 Status Bar</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS-tableview-reuse-cell]]></title>
    <link href="http://jickyi521.github.io/blog/2014/06/17/ios-tableview-reuse-cell/"/>
    <updated>2014-06-17T09:45:31+08:00</updated>
    <id>http://jickyi521.github.io/blog/2014/06/17/ios-tableview-reuse-cell</id>
    <content type="html"><![CDATA[<p>第一次需要实例化一屏所能展 Contentview N个的实例入queue，对下次屏幕展示的view分别都重用这N个。</p>

<p>static NSString <em>identifier = @&ldquo;cell&rdquo;;
UICustomerCell </em>cell = [tableView dequeueReusableCellWithIdentifier:identifier];</p>

<p>在 UICustomerCell 需要托人 UITableVIewCell 的控件 设置 identifier 为 &ldquo;cell&rdquo;</p>

<p>这样重用有重用，否则只是拖入的 UIView， 重用机制失效，每次还都会创建新的实例cell</p>

<p>Android里的重用 viewHolder</p>

<p> @Override</p>

<pre><code>public View getView(int position, View convertView, ViewGroup parent) {
    ViewHolder viewHolder = null;
    if (convertView == null) {
        convertView = View.inflate(mContext, R.layout.test, null);
        viewHolder = new ViewHolder();
        viewHolder.imageView = (ImageView) convertView.findViewById(R.id.item_image);
        viewHolder.titleTextView = (TextView) convertView.findViewById(R.id.item_text);
        convertView.setTag(viewHolder);
    } else {
        viewHolder = (ViewHolder) convertView.getTag();
    }
    return convertView;
}


class ViewHolder {
    ImageView imageView;
    TextView titleTextView;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
