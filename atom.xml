<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[A blog of EasonWoW]]></title>
  <link href="http://jickyi521.github.io/atom.xml" rel="self"/>
  <link href="http://jickyi521.github.io/"/>
  <updated>2015-01-22T11:38:13+08:00</updated>
  <id>http://jickyi521.github.io/</id>
  <author>
    <name><![CDATA[EasonWoW]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Several Concepts About Px Pt Dp... 关于屏幕适配的几个单位的概念]]></title>
    <link href="http://jickyi521.github.io/blog/2015/01/20/several-concept-about-px-pt-dot-dot-dot/"/>
    <updated>2015-01-20T14:30:22+08:00</updated>
    <id>http://jickyi521.github.io/blog/2015/01/20/several-concept-about-px-pt-dot-dot-dot</id>
    <content type="html"><![CDATA[<p><img src="http://jickyi521.github.io/images/0120_01.png"></p>

<p>最近在做 适配 的问题，当看到上面这张图后，顿时对这几个概念还有之前Android的dp、sp有些失措。</p>

<p>于是先理了下目前所有iPhone设备的参数情况:</p>

<table>
<thead>
<tr>
<th align="center">   Unit  </th>
<th align="center">  iPhone 3G/S  </th>
<th align="center"> iPhone 4/4S  </th>
<th align="center"> iPhone 5/5S/5C  </th>
<th align="center">     iPhone 6  </th>
<th align="center">   iPhone 6+  </th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">  Screen Size  </td>
<td align="center">      3.5&#8217;     </td>
<td align="center">       4&#8217;     </td>
<td align="center">        4.7&#8217;     </td>
<td align="center">       4.7&#8217;    </td>
<td align="center">       5.5&#8217;   </td>
</tr>
<tr>
<td align="center">  Physic Pixel </td>
<td align="center">    320*480    </td>
<td align="center">    640*960   </td>
<td align="center">     640*1136    </td>
<td align="center">     750*1334  </td>
<td align="center">    1080*1920 </td>
</tr>
<tr>
<td align="center">  Logic Pixel  </td>
<td align="center">    320*480    </td>
<td align="center">    320*480   </td>
<td align="center">      320*568    </td>
<td align="center">     375*667   </td>
<td align="center">     414*736  </td>
</tr>
<tr>
<td align="center">  Scale        </td>
<td align="center">      @1x      </td>
<td align="center">      @2x     </td>
<td align="center">        @2x      </td>
<td align="center">       @2x     </td>
<td align="center">       @3x    </td>
</tr>
<tr>
<td align="center">  PPI          </td>
<td align="center">      163      </td>
<td align="center">      326     </td>
<td align="center">        326      </td>
<td align="center">       326     </td>
<td align="center">       401    </td>
</tr>
<tr>
<td align="center">  DPI          </td>
<td align="center">      163      </td>
<td align="center">      163     </td>
<td align="center">        163      </td>
<td align="center">       163     </td>
<td align="center">       154    </td>
</tr>
</tbody>
</table>


<h3><em>尺寸</em></h3>

<blockquote><p>对角线的物理英寸数，1 inch = 2.54 cm</p></blockquote>

<h3><em>像素分辨率</em></h3>

<blockquote><p>一屏下一共最多可以显示了多少像素</p></blockquote>

<h3><em>逻辑分辨率/像素/PT</em></h3>

<blockquote><p>一屏下一共最多可以显示了逻辑像素/PT</p></blockquote>

<h3><em>倍率</em></h3>

<blockquote><p>像素分辨率/逻辑分辨率， 这个决定UX的切图</p></blockquote>

<h3><em>PPI/屏幕密度</em></h3>

<blockquote><p>Pixels per inch, 每英寸的像素数量, 高质量的屏幕显示像素精细优雅，看起来比较小，低ppi的相对粗糙，看起来大</p></blockquote>

<h3><em>DPI/屏幕点数</em></h3>

<blockquote><p>Dots per inch. 这是逻辑概念的点数，乘倍率就为像素 dpi</p></blockquote>

<p>另外iPhone 6屏幕实际可显示分辨率 1242 x 2208缩放到1080x1920优化显示。</p>

<p><a href="http://weizhifeng.net/you-should-know-about-dpi.html">http://weizhifeng.net/you-should-know-about-dpi.html</a>
<a href="http://www.zhihu.com/question/25361043">http://www.zhihu.com/question/25361043</a>
<a href="http://blakespot.com/ios_device_specifications_grid.html">http://blakespot.com/ios_device_specifications_grid.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A New Way to Instead of Mask - Tap获得点击区域来判断]]></title>
    <link href="http://jickyi521.github.io/blog/2015/01/16/a-new-way-about-mask/"/>
    <updated>2015-01-16T10:37:56+08:00</updated>
    <id>http://jickyi521.github.io/blog/2015/01/16/a-new-way-about-mask</id>
    <content type="html"><![CDATA[<p>之前在做UI的事件处理时，往往会有些新(蛋)颖(疼)的需求，比如要点击某块区域才能触发事件。
这时候首先想到的方法是在这块区域上面加块蒙版(UIButton)，把背景设为透明，自认为是so easy得解决了。</p>

<p>这俩天看到一种利用点击事件比较坐标讨巧的方式。有俩种方式:</p>

<ul>
<li>1、往View上加点击事件</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'> <span class="n">self</span><span class="p">.</span><span class="n">tapGestureRecognizer</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UITapGestureRecognizer</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTarget:</span><span class="n">self</span> <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">touchView:</span><span class="p">)];</span>
</span><span class='line'> <span class="p">[</span><span class="n">self</span> <span class="nl">addGestureRecognizer:</span><span class="n">self</span><span class="p">.</span><span class="n">tapGestureRecognizer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">touchView:</span><span class="p">(</span><span class="n">UITapGestureRecognizer</span> <span class="o">*</span><span class="p">)</span><span class="nv">tap</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CGPoint</span> <span class="n">touchPoint</span> <span class="o">=</span> <span class="p">[</span><span class="n">tap</span> <span class="nl">locationInView:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//拿到点击区域的坐标后进行比较 处理相应业务逻辑</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">dealloc</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">removeGestureRecognizer:</span><span class="n">self</span><span class="p">.]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>2、 直接重写view 的touchesEnded:withEvent 方法, 拿到事件的target view获得坐标</li>
</ul>


<!--more-->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">touchesEnded:</span><span class="p">(</span><span class="n">NSSet</span> <span class="o">*</span><span class="p">)</span><span class="nv">touches</span> <span class="nf">withEvent:</span><span class="p">(</span><span class="n">UIEvent</span> <span class="o">*</span><span class="p">)</span><span class="nv">event</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="nl">touchesEnded:</span><span class="n">touches</span> <span class="nl">withEvent:</span><span class="n">event</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">UITouch</span> <span class="o">*</span><span class="n">touch</span> <span class="o">=</span> <span class="p">[</span><span class="n">touches</span> <span class="n">anyObject</span><span class="p">];</span>
</span><span class='line'>    <span class="n">CGPoint</span> <span class="n">touchLocation</span> <span class="o">=</span> <span class="p">[</span><span class="n">touch</span> <span class="nl">locationInView:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//点击区域在titleLable的上方</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">touchLocation</span><span class="p">.</span><span class="n">y</span> <span class="o">&lt;</span> <span class="n">self</span><span class="p">.</span><span class="n">titleLable</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">y</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span> <span class="n">goToGrouponSummary</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">dealloc</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">removeGestureRecognizer:</span><span class="n">self</span><span class="p">.</span><span class="n">tapGestureRecognizer</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>第二种方式相对更简洁直接，一对比蒙版的方式low得要掉牙袅。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AutomaticallyAdjustsScrollViewInsets 和 Translucent 属性]]></title>
    <link href="http://jickyi521.github.io/blog/2014/07/02/use-automaticallyadjustsscrollviewinsets/"/>
    <updated>2014-07-02T22:18:15+08:00</updated>
    <id>http://jickyi521.github.io/blog/2014/07/02/use-automaticallyadjustsscrollviewinsets</id>
    <content type="html"><![CDATA[<p>最近在调UITabBarVC 里navigationbar吃掉contentview bug，最后主要定位到 automaticallyAdjustsScrollViewInsets 和 translucent属性使用不正确</p>

<p>iOS 7.0 statusbar 20points 和 navigationbar 44points在默认的情况下是透明的也就是VC的
self.view （0，0）是从 最左上角开始。</p>

<p><img src="http://jickyi521.github.io/images/0702-01.png"></p>

<p>在默认情况下普通的UIView和UIScrollView添加 红色的view (0,0,64,64) 展现的形式是不一样的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">addRedUIView</span><span class="p">{</span>
</span><span class='line'>    <span class="n">UIView</span> <span class="o">*</span><span class="n">redView</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">64</span><span class="p">)];</span>
</span><span class='line'>    <span class="n">redView</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">redColor</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">redView</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>UIVIew</li>
</ul>


<p><img src="http://jickyi521.github.io/images/0702-02.png"></p>

<ul>
<li>UITableView</li>
</ul>


<p><img src="http://jickyi521.github.io/images/0702-03.png"></p>

<p>这种情形由 automaticallyAdjustsScrollViewInsets 和 translucent属性所决定</p>

<h2>automaticallyAdjustsScrollViewInsets</h2>

<p><code>Specifies whether or not the view controller should automatically adjust its scroll view insets.
Default value is YES, which allows the view controller to adjust its scroll view insets in response to the screen areas consumed by the status bar, navigation bar, and toolbar or tab bar. Set to NO if you want to manage scroll view inset adjustments yourself, such as when there is more than one scroll view in the view hierarchy.</code></p>

<p>这个参数是7.0 出来，主要是为带有 UIScrollView 的控件所服务，且属性默认是YES, 也就是说</p>

<!--more-->


<p>在透明bar情形下，都会给加上个 64points 的insets， insets就是一个padding概念。
[self.tableView setContentInset:UIEdgeInsetsMake(64, 0, 0, 0)];</p>

<ul>
<li>1、navigationbar 透明</li>
</ul>


<p><img src="http://jickyi521.github.io/images/07-03-01.png"></p>

<p>即 self.navigationController.navigationBar.translucent = YES; 往navigation里面加的view都会往navigationbar里面进去，
对于scrollview的控件可以加个 UIEdgeInsetsMake(64, 0, 0, 0) 的insets，</p>

<p>而对于普通的uiview这种情况推荐最上层套个UIScrollView去处理，也可以将view在IB里面往下移动64去显示，注意点对对齐位置方式。不建议用代码去控制，太繁琐，尤其在考虑多屏幕下横竖屏情况，用autolayout是最合适的方式，还不熟悉呢这块。</p>

<ul>
<li>2、navigationbar 不透明</li>
</ul>


<p>view自动在navigationbar下面显示，不需要处理。</p>

<p> <a href="http://www.doubleencore.com/2013/12/reconciling-ios-6-ios-7-using-interface-builder/">iOS 6 &ndash; 7 的status bar兼容</a>   <br>
 <a href="http://www.doubleencore.com/2013/09/developers-guide-to-the-ios-7-status-bar/">Developer’s Guide to the iOS 7 Status Bar</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS-tableview-reuse-cell]]></title>
    <link href="http://jickyi521.github.io/blog/2014/06/17/ios-tableview-reuse-cell/"/>
    <updated>2014-06-17T09:45:31+08:00</updated>
    <id>http://jickyi521.github.io/blog/2014/06/17/ios-tableview-reuse-cell</id>
    <content type="html"><![CDATA[<p>第一次需要实例化一屏所能展 Contentview N个的实例入queue，对下次屏幕展示的view分别都重用这N个。</p>

<p>static NSString <em>identifier = @&ldquo;cell&rdquo;;
UICustomerCell </em>cell = [tableView dequeueReusableCellWithIdentifier:identifier];</p>

<p>在 UICustomerCell 需要托人 UITableVIewCell 的控件 设置 identifier 为 &ldquo;cell&rdquo;</p>

<p>这样重用有重用，否则只是拖入的 UIView， 重用机制失效，每次还都会创建新的实例cell</p>

<p>Android里的重用 viewHolder</p>

<p> @Override</p>

<pre><code>public View getView(int position, View convertView, ViewGroup parent) {
    ViewHolder viewHolder = null;
    if (convertView == null) {
        convertView = View.inflate(mContext, R.layout.test, null);
        viewHolder = new ViewHolder();
        viewHolder.imageView = (ImageView) convertView.findViewById(R.id.item_image);
        viewHolder.titleTextView = (TextView) convertView.findViewById(R.id.item_text);
        convertView.setTag(viewHolder);
    } else {
        viewHolder = (ViewHolder) convertView.getTag();
    }
    return convertView;
}


class ViewHolder {
    ImageView imageView;
    TextView titleTextView;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[两种添加自定义view的方式]]></title>
    <link href="http://jickyi521.github.io/blog/2014/06/14/two-ways-init-customer-view/"/>
    <updated>2014-06-14T15:17:13+08:00</updated>
    <id>http://jickyi521.github.io/blog/2014/06/14/two-ways-init-customer-view</id>
    <content type="html"><![CDATA[<p>这种使用场景最普遍了吧，稍不留神就碰到没有将自定的custom的view加成功的trick</p>

<p><code>需要注意的两点</code></p>

<ul>
<li>1、对于ViewController 在xib文件里 File&rsquo;s Owner 右侧 inspector 中的custom 对于ViewController,不然识别不了里面的outlet和IBAction</li>
</ul>


<p><img src="http://jickyi521.github.io/images/iOS_fileowner.png"></p>

<ul>
<li>2、对于普通的 custom UIView 需要将最顶层的UIView 的custom class填对应即可:</li>
</ul>


<p><img src="http://jickyi521.github.io/images/iOS_customclass.png"></p>

<p>两种添加方式，上代码吧&hellip;</p>

<p><code>第一种:</code></p>

<p> 常见的方式在需要加入custom view处进行初始化
 需要注意的是，这种方式去初始化CustomView的时候是不会调 initFrame 构造方法，所以外面需要主动给frame</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">CustomView</span> <span class="o">*</span><span class="n">customView</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="nl">loadNibNamed:</span><span class="s">@&quot;CustomView&quot;</span> <span class="nl">owner:</span><span class="n">self</span> <span class="nl">options:</span><span class="nb">nil</span><span class="p">]</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>第二种:</code></p>

<p>常见的方式在需要加入custom view处进行初始化, 然后在 CustomView 里面的  initWithFrame 去 load</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">CustomView</span> <span class="o">*</span><span class="n">customView</span> <span class="o">=</span> <span class="p">[</span><span class="n">CustomView</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">initWithFrame</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithFrame:</span><span class="p">(</span><span class="n">CGRect</span><span class="p">)</span><span class="nv">frame</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="nl">initWithFrame:</span><span class="n">frame</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="nl">loadNibNamed:</span><span class="s">@&quot;CustomView&quot;</span> <span class="nl">owner:</span><span class="n">self</span> <span class="nl">options:</span><span class="nb">nil</span><span class="p">]</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>推荐用第二种方式，封装性更好，也可以避免没有set frame的坑。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[遍历发消息]]></title>
    <link href="http://jickyi521.github.io/blog/2014/06/14/traversal-send-message/"/>
    <updated>2014-06-14T13:07:07+08:00</updated>
    <id>http://jickyi521.github.io/blog/2014/06/14/traversal-send-message</id>
    <content type="html"><![CDATA[<h2>应用场景</h2>

<p>对一个有许多 subview 的 ViewContainer 要加入新view之前需要先移干净 之前的view，以防止新view被污染
以前的做法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">for</span><span class="p">(</span><span class="n">UIView</span> <span class="o">*</span><span class="n">subview</span> <span class="k">in</span> <span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">subviews</span><span class="p">){</span>
</span><span class='line'>        <span class="p">[</span><span class="n">subview</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>发现一种新的写法</code></p>

<p>这种方式对遍历封装好了，简洁且高效
//Sends to each object in the array the message identified by a given selector, starting with the first object and continuing through the array to the last object.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">subviews</span> <span class="nl">makeObjectsPerformSelector:</span><span class="k">@selector</span><span class="p">(</span><span class="n">removeFromSuperview</span><span class="p">)];</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS-Loading-View]]></title>
    <link href="http://jickyi521.github.io/blog/2014/06/11/ios-loading-view/"/>
    <updated>2014-06-11T22:42:44+08:00</updated>
    <id>http://jickyi521.github.io/blog/2014/06/11/ios-loading-view</id>
    <content type="html"><![CDATA[<h2>应用场景</h2>

<pre><code>在对用户或者流程上需要进行堵塞操作时候需要block，尤其是像Login, Oath 这种网络请求，
这时候就需要个loadingview来作为缓冲（对于些展示的界面的网络请求，没有必要block)。
对全局写个易用性好的LoadingView就很有必要，这个View相当于是个资源的Manager，基于这些写个单例是非常适合此种情况的。
</code></pre>

<p>·上代码吧&hellip;.·</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">.</span><span class="n">h</span>
</span><span class='line'><span class="o">+</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">getShareInstance</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">show</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">stop</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="n">m</span>
</span><span class='line'><span class="o">+</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">getShareInstance</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">instance</span><span class="p">){</span>
</span><span class='line'>        <span class="n">instance</span> <span class="o">=</span> <span class="p">[[</span><span class="n">JYTLoadingView</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">instance</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nl">initWithFrame:</span><span class="p">(</span><span class="n">CGRect</span><span class="p">)</span><span class="n">frame</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="nl">loadNibNamed:</span><span class="s">@&quot;JYTLoadingView&quot;</span> <span class="nl">owner:</span><span class="n">self</span> <span class="nl">options:</span><span class="nb">nil</span><span class="p">]</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">CGRect</span> <span class="n">frame</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIScreen</span> <span class="n">mainScreen</span><span class="p">].</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="mf">8.0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">show</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">indicatorView</span> <span class="n">startAnimating</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">keyWindow</span> <span class="nl">addSubview:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>     <span class="n">timer</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSTimer</span> <span class="nl">scheduledTimerWithTimeInterval:</span><span class="mi">3</span> <span class="nl">target:</span><span class="n">self</span> <span class="nl">selector:</span><span class="k">@selector</span><span class="p">(</span><span class="n">stop</span><span class="p">)</span> <span class="nl">userInfo:</span><span class="nb">nil</span> <span class="nl">repeats:</span><span class="n">NO</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">stop</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p><code>V2改进版，对getShareInstance进一步封装，对与外围试用者而言，只需要知道show和stop接口即可:</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">.</span><span class="n">h</span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">show</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">stop</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="n">m</span>
</span><span class='line'><span class="o">+</span><span class="p">(</span><span class="n">JYTLoadingView</span> <span class="o">*</span><span class="p">)</span> <span class="n">getShareInstance</span><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">instance</span><span class="p">){</span>
</span><span class='line'>        <span class="n">instance</span> <span class="o">=</span> <span class="p">[[</span><span class="n">JYTLoadingView</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">instance</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nl">initWithFrame:</span><span class="p">(</span><span class="n">CGRect</span><span class="p">)</span><span class="n">frame</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="nl">loadNibNamed:</span><span class="s">@&quot;JYTLoadingView&quot;</span> <span class="nl">owner:</span><span class="n">self</span> <span class="nl">options:</span><span class="nb">nil</span><span class="p">]</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">CGRect</span> <span class="n">frame</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIScreen</span> <span class="n">mainScreen</span><span class="p">].</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="mf">8.0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">+</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">show</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[[[</span><span class="n">JYTLoadingView</span> <span class="n">getShareInstance</span><span class="p">]</span> <span class="n">indicatorView</span><span class="p">]</span> <span class="n">startAnimating</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">keyWindow</span> <span class="nl">addSubview:</span> <span class="p">[</span><span class="n">JYTLoadingView</span> <span class="n">getShareInstance</span><span class="p">]];</span>
</span><span class='line'>     <span class="n">timer</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSTimer</span> <span class="nl">scheduledTimerWithTimeInterval:</span><span class="mi">3</span> <span class="nl">target:</span><span class="n">self</span> <span class="nl">selector:</span><span class="k">@selector</span><span class="p">(</span><span class="n">stop</span><span class="p">)</span> <span class="nl">userInfo:</span><span class="nb">nil</span> <span class="nl">repeats:</span><span class="n">NO</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">+</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">stop</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">self</span> <span class="n">getShareInstance</span><span class="p">]</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>V3 .m进行改进，对于代码alloc 的方式，view走 initWithFrame, 而对于通过 IB方式的设计的view， 是不会走这个生命周期中的方法</code></p>

<ul>
<li>iOS文档：
If you create a view object programmatically, this method is the designated initializer for theUIView class. Subclasses can override this method to perform any custom initialization but must callsuper at the beginning of their implementation.</li>
</ul>


<p>If you use Interface Builder to design your interface, this method is not called when your view objects are subsequently loaded from the nib file.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">+</span><span class="p">(</span><span class="n">LoadingScreen</span> <span class="o">*</span><span class="p">)</span><span class="nf">getShareInstance</span><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">shareInstance</span><span class="p">){</span>
</span><span class='line'>        <span class="n">shareInstance</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="nl">loadNibNamed:</span><span class="s">@&quot;LoadingScreen&quot;</span> <span class="nl">owner:</span><span class="n">self</span> <span class="nl">options:</span><span class="nb">nil</span><span class="p">]</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="n">shareInstance</span> <span class="n">mainLoadingView</span><span class="p">].</span><span class="n">center</span> <span class="o">=</span> <span class="n">shareInstance</span><span class="p">.</span><span class="n">center</span><span class="p">;</span>
</span><span class='line'>        <span class="p">[</span><span class="n">shareInstance</span> <span class="n">loadingLable</span><span class="p">].</span><span class="n">text</span> <span class="o">=</span> <span class="n">NSLocalizedString</span><span class="p">(</span><span class="s">@&quot;Indicator.Message.Loading&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">shareInstance</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">show</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[[[</span><span class="n">LoadingScreen</span> <span class="n">getShareInstance</span><span class="p">]</span> <span class="n">indicatorView</span><span class="p">]</span> <span class="n">startAnimating</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">keyWindow</span> <span class="nl">addSubview:</span><span class="p">[</span><span class="n">LoadingScreen</span> <span class="n">getShareInstance</span><span class="p">]];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">stop</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[[[</span><span class="n">LoadingScreen</span> <span class="n">getShareInstance</span><span class="p">]</span> <span class="n">indicatorView</span><span class="p">]</span> <span class="n">stopAnimating</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">LoadingScreen</span> <span class="n">getShareInstance</span><span class="p">]</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress和gitcafe 的搭建]]></title>
    <link href="http://jickyi521.github.io/blog/2014/06/11/octopress-gitcafe/"/>
    <updated>2014-06-11T20:49:53+08:00</updated>
    <id>http://jickyi521.github.io/blog/2014/06/11/octopress-gitcafe</id>
    <content type="html"><![CDATA[<p>Octopress安装步骤可以参考 <a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/">象写程序一样写博客：搭建基于github的博客</a></p>

<p>在mac mini 和 mbp 上安装过程额外发现的问题如下:</p>

<h2>bundle install 安装失败</h2>

<pre><code>先安ruby的rvm环境

rvm --force install 1.9.2  
gem install bundle --no-ri --no-rdoc
bundle install
</code></pre>

<p>  <a href="http://stackoverflow.com/questions/12119138/failed-to-build-gem-native-extension-when-install-redcloth-4-2-9-install-linux">Reference</a></p>

<h2>Zsh下octopress命令不识别</h2>

<pre><code>rake new_post["test"]
-&gt;zsh: no matches found: new_post[test]

*1、 由于zsh的通配符造成的 *, (, |, &lt;, [, ?, 可以用引号括起来 
rake "new_post[test]"

*2、要根治的话需要改zsh配置文件 加 alias rake="noglob rake" 取消通配    
vim ~/.zshrc 
</code></pre>

<h2>中文问题</h2>

<!--more-->


<pre><code> `中文标题`
rake new_post["测试"]
rake generate 
Creating new post: source/_posts/2014-06-10-ce-shi-zhong-wen.markdown

octopress自动将中文转到了拼音，如果强制将 md 改成中文标题，博客可以显示标题但点进详情后找不着对应的index.html文件，需要手工补全才能显示详情页

推荐做法
rake new_post["Test"]
编辑新生成的md文件中将 title:Test 改成 title:测试

‘中文内容’
rake generate 可能出现error: invalid byte sequence in US-ASCII
将编码格式设为 utf-8
vim ~/.profile 加入(登录默认载入的配置文件) 
NG=en_US.UTF-8
LC_ALL=en_US.UTF-8
</code></pre>

<h2>Commands</h2>

<ul>
<li><code>rake setup_github_pages</code> 设置github_pages</li>
<li><code>rake new post['article name']</code> 生成博文框架，编辑md文件即可</li>
<li><code>rake watch</code> 检测文件变化，实时生成新内容</li>
<li><code>rake generate</code> 生成静态文件</li>
<li><code>rake preview</code> 在本机4000端口生成访问内容</li>
<li><code>rake deploy</code> 发布文件，同步到github master</li>
</ul>


<h2>好卡</h2>

<p>已经去掉了google 自定义字体去掉，打开发现还是卡的不行
发现浏览器下边加载状态栏一直在loading这货: ajax.googleapis.com
<img src="http://jickyi521.github.io/images/2014-06-11-ajax.googleapi.jpg"></p>

<p>于是猜想这玩意应该跟字体一样也被墙了吧，于是查找下：</p>

<p><code>find .* | xargs grep "ajax.googleapis.com"</code>
发现果然在 /source/_include/head.html 用了
<code>&lt;script src="//ajax.googleapis.com//ajax/libs/jquery/1.9.1/jquery.min.js"&gt;&lt;/script&gt;</code>
找了下网上替换成下面的
<code>&lt;script src="//ajax.useso.com//ajax/libs/jquery/1.9.1/jquery.min.js"&gt;&lt;/script&gt;</code></p>

<p>重新deploy，流畅得都没有抓着加载 ajax.useso.com 状态</p>

<h2>多台电脑协同使用octopress</h2>

<p>git会映射到两处的remote:  github上和gitcafe server</p>

<p>  gitcafe/gitcafe-pages
  gitcafe/master
  origin/master
  origin/source</p>

<p>流程:
* 1、本地需要在origin source下干活，完事后将本地的改动 git push origin source
* 2、rake generate rake deploy 将本地的改动生效后 deploy到 gitcafe 和 github 上的master 分支上
* 3、在其他电脑上， 先 git pull origin source 将远程的 souce 拉倒本地 mege，接下来的 流程与 1、2 一样</p>

<p>github pages 或者 gitcafe pages 会去加载 其master 分支下的静态页面显示。</p>

<ul>
<li><a href="http://www.orcame.com/blog/2013/12/26/octopress-multi-compoter/">多台电脑协同使用octopress</a></li>
<li><a href="http://www.tuicool.com/articles/N7bYfy">Gitcafe教程</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Wolrd]]></title>
    <link href="http://jickyi521.github.io/blog/2014/06/10/hello-wolrd/"/>
    <updated>2014-06-10T23:29:04+08:00</updated>
    <id>http://jickyi521.github.io/blog/2014/06/10/hello-wolrd</id>
    <content type="html"><![CDATA[<ul>
<li><code>echo Hello World</code></li>
</ul>

]]></content>
  </entry>
  
</feed>
