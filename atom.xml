<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[EasonWoW 的技术博客]]></title>
  <link href="http://jickyi521.github.io/atom.xml" rel="self"/>
  <link href="http://jickyi521.github.io/"/>
  <updated>2014-06-15T18:27:30+08:00</updated>
  <id>http://jickyi521.github.io/</id>
  <author>
    <name><![CDATA[EasonWoW]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[两种添加自定义view的方式]]></title>
    <link href="http://jickyi521.github.io/blog/2014/06/14/two-ways-init-customer-view/"/>
    <updated>2014-06-14T15:17:13+08:00</updated>
    <id>http://jickyi521.github.io/blog/2014/06/14/two-ways-init-customer-view</id>
    <content type="html"><![CDATA[<p>这种使用场景最普遍了吧，稍不留神就碰到没有将自定的custom的view加成功的trick</p>

<p><code>需要注意的两点</code></p>

<ul>
<li>1、对于ViewController 在xib文件里 File&rsquo;s Owner 右侧 inspector 中的custom 对于ViewController,不然识别不了里面的outlet和IBAction</li>
</ul>


<p><img src="http://jickyi521.github.io/images/iOS_fileowner.png"></p>

<ul>
<li>2、对于普通的 custom UIView 需要将最顶层的UIView 的custom class填对应即可:</li>
</ul>


<p><img src="http://jickyi521.github.io/images/iOS_customclass.png"></p>

<p>两种添加方式，上代码吧&hellip;</p>

<p><code>第一种:</code></p>

<p> 常见的方式在需要加入custom view处进行初始化
 需要注意的是，这种方式去初始化CustomView的时候是不会调 initFrame 构造方法，所以外面需要主动给frame</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">CustomView</span> <span class="o">*</span><span class="n">customView</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="nl">loadNibNamed:</span><span class="s">@&quot;CustomView&quot;</span> <span class="nl">owner:</span><span class="n">self</span> <span class="nl">options:</span><span class="nb">nil</span><span class="p">]</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>第二种:</code></p>

<p>常见的方式在需要加入custom view处进行初始化, 然后在 CustomView 里面的  initWithFrame 去 load</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">CustomView</span> <span class="o">*</span><span class="n">customView</span> <span class="o">=</span> <span class="p">[</span><span class="n">CustomView</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">initWithFrame</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithFrame:</span><span class="p">(</span><span class="n">CGRect</span><span class="p">)</span><span class="nv">frame</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="nl">initWithFrame:</span><span class="n">frame</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="nl">loadNibNamed:</span><span class="s">@&quot;CustomView&quot;</span> <span class="nl">owner:</span><span class="n">self</span> <span class="nl">options:</span><span class="nb">nil</span><span class="p">]</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>推荐用第二种方式，封装性更好，也可以避免没有set frame的坑。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[遍历发消息]]></title>
    <link href="http://jickyi521.github.io/blog/2014/06/14/traversal-send-message/"/>
    <updated>2014-06-14T13:07:07+08:00</updated>
    <id>http://jickyi521.github.io/blog/2014/06/14/traversal-send-message</id>
    <content type="html"><![CDATA[<h2>应用场景</h2>

<p>对一个有许多 subview 的 ViewContainer 要加入新view之前需要先移干净 之前的view，以防止新view被污染
以前的做法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">for</span><span class="p">(</span><span class="n">UIView</span> <span class="o">*</span><span class="n">subview</span> <span class="k">in</span> <span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">subviews</span><span class="p">){</span>
</span><span class='line'>        <span class="p">[</span><span class="n">subview</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>发现一种新的写法</code></p>

<p>这种方式对遍历封装好了，简洁且高效
//Sends to each object in the array the message identified by a given selector, starting with the first object and continuing through the array to the last object.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">subviews</span> <span class="nl">makeObjectsPerformSelector:</span><span class="k">@selector</span><span class="p">(</span><span class="n">removeFromSuperview</span><span class="p">)];</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS-Loading-View]]></title>
    <link href="http://jickyi521.github.io/blog/2014/06/11/ios-loading-view/"/>
    <updated>2014-06-11T22:42:44+08:00</updated>
    <id>http://jickyi521.github.io/blog/2014/06/11/ios-loading-view</id>
    <content type="html"><![CDATA[<h2>应用场景</h2>

<pre><code>在对用户或者流程上需要进行堵塞操作时候需要block，尤其是像Login, Oath 这种网络请求，
这时候就需要个loadingview来作为缓冲（对于些展示的界面的网络请求，没有必要block)。
对全局写个易用性好的LoadingView就很有必要，这个View相当于是个资源的Manager，基于这些写个单例是非常适合此种情况的。
</code></pre>

<p>·上代码吧&hellip;.·</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">.</span><span class="n">h</span>
</span><span class='line'><span class="o">+</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">getShareInstance</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">show</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">stop</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="n">m</span>
</span><span class='line'><span class="o">+</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">getShareInstance</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">instance</span><span class="p">){</span>
</span><span class='line'>        <span class="n">instance</span> <span class="o">=</span> <span class="p">[[</span><span class="n">JYTLoadingView</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">instance</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nl">initWithFrame:</span><span class="p">(</span><span class="n">CGRect</span><span class="p">)</span><span class="n">frame</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="nl">loadNibNamed:</span><span class="s">@&quot;JYTLoadingView&quot;</span> <span class="nl">owner:</span><span class="n">self</span> <span class="nl">options:</span><span class="nb">nil</span><span class="p">]</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">CGRect</span> <span class="n">frame</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIScreen</span> <span class="n">mainScreen</span><span class="p">].</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="mf">8.0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">show</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">indicatorView</span> <span class="n">startAnimating</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">keyWindow</span> <span class="nl">addSubview:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>     <span class="n">timer</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSTimer</span> <span class="nl">scheduledTimerWithTimeInterval:</span><span class="mi">3</span> <span class="nl">target:</span><span class="n">self</span> <span class="nl">selector:</span><span class="k">@selector</span><span class="p">(</span><span class="n">stop</span><span class="p">)</span> <span class="nl">userInfo:</span><span class="nb">nil</span> <span class="nl">repeats:</span><span class="n">NO</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">stop</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p><code>V2改进版，对getShareInstance进一步封装，对与外围试用者而言，只需要知道show和stop接口即可:</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">.</span><span class="n">h</span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">show</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">stop</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="n">m</span>
</span><span class='line'><span class="o">+</span><span class="p">(</span><span class="n">JYTLoadingView</span> <span class="o">*</span><span class="p">)</span> <span class="n">getShareInstance</span><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">instance</span><span class="p">){</span>
</span><span class='line'>        <span class="n">instance</span> <span class="o">=</span> <span class="p">[[</span><span class="n">JYTLoadingView</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">instance</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nl">initWithFrame:</span><span class="p">(</span><span class="n">CGRect</span><span class="p">)</span><span class="n">frame</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="nl">loadNibNamed:</span><span class="s">@&quot;JYTLoadingView&quot;</span> <span class="nl">owner:</span><span class="n">self</span> <span class="nl">options:</span><span class="nb">nil</span><span class="p">]</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">CGRect</span> <span class="n">frame</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIScreen</span> <span class="n">mainScreen</span><span class="p">].</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="mf">8.0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">+</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">show</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[[[</span><span class="n">JYTLoadingView</span> <span class="n">getShareInstance</span><span class="p">]</span> <span class="n">indicatorView</span><span class="p">]</span> <span class="n">startAnimating</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">keyWindow</span> <span class="nl">addSubview:</span> <span class="p">[</span><span class="n">JYTLoadingView</span> <span class="n">getShareInstance</span><span class="p">]];</span>
</span><span class='line'>     <span class="n">timer</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSTimer</span> <span class="nl">scheduledTimerWithTimeInterval:</span><span class="mi">3</span> <span class="nl">target:</span><span class="n">self</span> <span class="nl">selector:</span><span class="k">@selector</span><span class="p">(</span><span class="n">stop</span><span class="p">)</span> <span class="nl">userInfo:</span><span class="nb">nil</span> <span class="nl">repeats:</span><span class="n">NO</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">+</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">stop</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">self</span> <span class="n">getShareInstance</span><span class="p">]</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>V3 .m进行改进，对于代码alloc 的方式，view走 initWithFrame, 而对于通过 IB方式的设计的view， 是不会走这个生命周期中的方法</code></p>

<ul>
<li>iOS文档：
If you create a view object programmatically, this method is the designated initializer for theUIView class. Subclasses can override this method to perform any custom initialization but must callsuper at the beginning of their implementation.</li>
</ul>


<p>If you use Interface Builder to design your interface, this method is not called when your view objects are subsequently loaded from the nib file.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">+</span><span class="p">(</span><span class="n">LoadingScreen</span> <span class="o">*</span><span class="p">)</span><span class="nf">getShareInstance</span><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">shareInstance</span><span class="p">){</span>
</span><span class='line'>        <span class="n">shareInstance</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="nl">loadNibNamed:</span><span class="s">@&quot;LoadingScreen&quot;</span> <span class="nl">owner:</span><span class="n">self</span> <span class="nl">options:</span><span class="nb">nil</span><span class="p">]</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="n">shareInstance</span> <span class="n">mainLoadingView</span><span class="p">].</span><span class="n">center</span> <span class="o">=</span> <span class="n">shareInstance</span><span class="p">.</span><span class="n">center</span><span class="p">;</span>
</span><span class='line'>        <span class="p">[</span><span class="n">shareInstance</span> <span class="n">loadingLable</span><span class="p">].</span><span class="n">text</span> <span class="o">=</span> <span class="n">NSLocalizedString</span><span class="p">(</span><span class="s">@&quot;Indicator.Message.Loading&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">shareInstance</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">show</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[[[</span><span class="n">LoadingScreen</span> <span class="n">getShareInstance</span><span class="p">]</span> <span class="n">indicatorView</span><span class="p">]</span> <span class="n">startAnimating</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">keyWindow</span> <span class="nl">addSubview:</span><span class="p">[</span><span class="n">LoadingScreen</span> <span class="n">getShareInstance</span><span class="p">]];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">stop</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[[[</span><span class="n">LoadingScreen</span> <span class="n">getShareInstance</span><span class="p">]</span> <span class="n">indicatorView</span><span class="p">]</span> <span class="n">stopAnimating</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">LoadingScreen</span> <span class="n">getShareInstance</span><span class="p">]</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress和gitcafe 的搭建]]></title>
    <link href="http://jickyi521.github.io/blog/2014/06/11/octopress-gitcafe/"/>
    <updated>2014-06-11T20:49:53+08:00</updated>
    <id>http://jickyi521.github.io/blog/2014/06/11/octopress-gitcafe</id>
    <content type="html"><![CDATA[<p>Octopress安装步骤可以参考 <a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/">象写程序一样写博客：搭建基于github的博客</a></p>

<p>在mac mini 和 mbp 上安装过程额外发现的问题如下:</p>

<h2>bundle install 安装失败</h2>

<pre><code>先安ruby的rvm环境

rvm --force install 1.9.2  
gem install bundle --no-ri --no-rdoc
bundle install
</code></pre>

<p>  <a href="http://stackoverflow.com/questions/12119138/failed-to-build-gem-native-extension-when-install-redcloth-4-2-9-install-linux">Reference</a></p>

<h2>Zsh下octopress命令不识别</h2>

<pre><code>rake new_post["test"]
-&gt;zsh: no matches found: new_post[test]

*1、 由于zsh的通配符造成的 *, (, |, &lt;, [, ?, 可以用引号括起来 
rake "new_post[test]"

*2、要根治的话需要改zsh配置文件 加 alias rake="noglob rake" 取消通配    
vim ~/.zshrc 
</code></pre>

<h2>中文问题</h2>

<!--more-->


<pre><code> `中文标题`
rake new_post["测试"]
rake generate 
Creating new post: source/_posts/2014-06-10-ce-shi-zhong-wen.markdown

octopress自动将中文转到了拼音，如果强制将 md 改成中文标题，博客可以显示标题但点进详情后找不着对应的index.html文件，需要手工补全才能显示详情页

推荐做法
rake new_post["Test"]
编辑新生成的md文件中将 title:Test 改成 title:测试

‘中文内容’
rake generate 可能出现error: invalid byte sequence in US-ASCII
将编码格式设为 utf-8
vim ~/.profile 加入(登录默认载入的配置文件) 
NG=en_US.UTF-8
LC_ALL=en_US.UTF-8
</code></pre>

<h2>Commands</h2>

<ul>
<li><code>rake setup_github_pages</code> 设置github_pages</li>
<li><code>rake new post['article name']</code> 生成博文框架，编辑md文件即可</li>
<li><code>rake watch</code> 检测文件变化，实时生成新内容</li>
<li><code>rake generate</code> 生成静态文件</li>
<li><code>rake preview</code> 在本机4000端口生成访问内容</li>
<li><code>rake deploy</code> 发布文件，同步到github master</li>
</ul>


<h2>好卡</h2>

<p>已经去掉了google 自定义字体去掉，打开发现还是卡的不行
发现浏览器下边加载状态栏一直在loading这货: ajax.googleapis.com
<img src="http://jickyi521.github.io/images/2014-06-11-ajax.googleapi.jpg"></p>

<p>于是猜想这玩意应该跟字体一样也被墙了吧，于是查找下：</p>

<p><code>find .* | xargs grep "ajax.googleapis.com"</code>
发现果然在 /source/_include/head.html 用了
<code>&lt;script src="//ajax.googleapis.com//ajax/libs/jquery/1.9.1/jquery.min.js"&gt;&lt;/script&gt;</code>
找了下网上替换成下面的
<code>&lt;script src="//ajax.useso.com//ajax/libs/jquery/1.9.1/jquery.min.js"&gt;&lt;/script&gt;</code></p>

<p>重新deploy，流畅得都没有抓着加载 ajax.useso.com 状态</p>

<ul>
<li><a href="http://www.orcame.com/blog/2013/12/26/octopress-multi-compoter/">多台电脑协同使用octopress</a></li>
<li><a href="http://www.tuicool.com/articles/N7bYfy">Gitcafe教程</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Wolrd]]></title>
    <link href="http://jickyi521.github.io/blog/2014/06/10/hello-wolrd/"/>
    <updated>2014-06-10T23:29:04+08:00</updated>
    <id>http://jickyi521.github.io/blog/2014/06/10/hello-wolrd</id>
    <content type="html"><![CDATA[<ul>
<li><code>echo Hello World</code></li>
</ul>

]]></content>
  </entry>
  
</feed>
